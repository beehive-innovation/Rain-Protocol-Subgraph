specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: TrustFactory
    network: {{ network }}
    source:
      address: "{{ factory }}"
      abi: TrustFactory
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewChild
        - Implementation
      abis:
        - name: TrustFactory
          file: ./abis/TrustFactory.json
        - name: Trust
          file: ./abis/Trust.json
        - name: Pool
          file: ./abis/Pool.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: RedeemableERC20
          file: ./abis/RedeemableERC20.json
        - name: SeedERC20
          file: ./abis/SeedERC20.json
      eventHandlers:
        - event: NewChild(address,address)
          handler: handleNewChild
        - event: Implementation(address,address)
          handler: handleImplementation
      file: ./src/trust/trustFactory.ts
  - kind: ethereum/contract
    name: VerifyFactory
    network: {{ network }}
    source:
      address: "{{ verifyFactory }}"
      abi: VerifyFactory
      startBlock: {{ verifyFactoryBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewChild
        - Implementation
      abis:
        - name: VerifyFactory
          file: ./abis/verify/VerifyFactory.json
      eventHandlers:
        - event: NewChild(address,address)
          handler: handleNewChild
        - event: Implementation(address,address)
          handler: handleImplementation
      file: ./src/verify/VerifyFactory.ts
  - kind: ethereum/contract
    name: ERC20BalanceTierFactory
    network: {{ network }}
    source:
      address: "{{ erc20BalanceTierFactory }}"
      abi: ERC20BalanceTierFactory
      startBlock: {{ blockErc20BalanceTierFactory }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewChild
        - Implementation
      abis:
        - name: ERC20BalanceTierFactory
          file: ./abis/tier/ERC20BalanceTierFactory.json
        - name: ERC20BalanceTier
          file: ./abis/tier/ERC20BalanceTier.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: NewChild(address,address)
          handler: handleNewChild
        - event: Implementation(address,address)
          handler: handleImplementation
      file: ./src/tier/ERC20BalanceTierFactory.ts
  - kind: ethereum/contract
    name: ERC20TransferTierFactory
    network: {{ network }}
    source:
      address: "{{ erc20TransferTierFactory }}"
      abi: ERC20TransferTierFactory
      startBlock: {{ blockErc20TransferTierFactory }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewChild
        - Implementation
      abis:
        - name: ERC20TransferTierFactory
          file: ./abis/tier/ERC20TransferTierFactory.json
        - name: ERC20TransferTier
          file: ./abis/tier/ERC20TransferTier.json
      eventHandlers:
        - event: NewChild(address,address)
          handler: handleNewChild
        - event: Implementation(address,address)
          handler: handleImplementation
      file: ./src/tier/ERC20TransferTierFactory.ts
  - kind: ethereum/contract
    name: CombineTierFactory
    network: {{ network }}
    source:
      address: "{{ combineTierFactory }}"
      abi: CombineTierFactory
      startBlock: {{ blockCombineTierFactory }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewChild
        - Implementation
      abis:
        - name: CombineTierFactory
          file: ./abis/tier/CombineTierFactory.json
        - name: CombineTier
          file: ./abis/tier/CombineTier.json
      eventHandlers:
        - event: NewChild(address,address)
          handler: handleNewChild
        - event: Implementation(address,address)
          handler: handleImplementation
      file: ./src/tier/CombineTierFactory.ts
  - kind: ethereum/contract
    name: SaleFactory
    network: {{ network }}
    source:
      address: "{{ saleFactory }}"
      abi: SaleFactory
      startBlock: {{ blockSaleFactory }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewChild
        - Implementation
      abis:
        - name: SaleFactory
          file: ./abis/sale/SaleFactory.json
        - name: Sale
          file: ./abis/sale/Sale.json
      eventHandlers:
        - event: NewChild(address,address)
          handler: handleNewChild
        - event: Implementation(address,address)
          handler: handleImplementation
      file: ./src/sale/SaleFactory.ts
  
templates:
  - kind: ethereum/contract
    name: TrustTemplate
    network: {{ network }}
    source:
      abi: Trust
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Construction
        - CreatorFundsRelease
        - EndDutchAuction
        - Initialize
        - Notice
        - PhaseScheduled
        - StartDutchAuction
      abis:
        - name: Trust
          file: ./abis/Trust.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Construction(address,address,address,address,address,address,uint256,uint256)
          handler: handleConstruction
        - event: CreatorFundsRelease(address,address,uint256)
          handler: handleCreatorFundsRelease
        - event: EndDutchAuction(address,uint256,uint256,uint256,uint256,uint256)
          handler: handleEndDutchAuction
        - event: Initialize(address,(address,uint256,uint256,uint256,uint256,address,uint256,uint256,uint256),address,address,address,uint256)
          handler: handleInitialize
        - event: Notice(address,bytes)
          handler: handleNotice
        - event: PhaseScheduled(address,uint256,uint256)
          handler: handlePhaseScheduled
        - event: StartDutchAuction(address,address,uint256)
          handler: handleStartDutchAuction
      file: ./src/trust/trust.ts
  - kind: ethereum/contract
    name: SeedERC20Template
    network: {{ network }}
    source:
      abi: SeedERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Seed
        - Initialize
        - Unseed
        - Transfer
      abis:
        - name: SeedERC20
          file: ./abis/SeedERC20.json
        - name: RedeemableERC20
          file: ./abis/RedeemableERC20.json
      eventHandlers:
        - event: Seed(address,uint256,uint256)
          handler: handleSeed
        - event: Initialize(address,address,address,uint256,uint256)
          handler: handleInitialize
        - event: Unseed(address,uint256,uint256)
          handler: handleUnseed
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/trust/SeedERC20.ts
  - kind: ethereum/contract
    name: RedeemableERC20Template
    network: {{ network }}
    source:
      abi: RedeemableERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Initialize
        - Receiver
        - Sender
        - Transfer
        - ERC20PullInitialize
        - Redeem
        - TreasuryAsset
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: RedeemableERC20
          file: ./abis/RedeemableERC20.json
        - name: SeedERC20
          file: ./abis/SeedERC20.json
      eventHandlers:
        - event: Initialize(address,address,uint256)
          handler: handleInitialize
        - event: Receiver(address,address)
          handler: handleInitialize
        - event: Sender(address,address)
          handler: handleSender
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: ERC20PullInitialize(address,address,address)
          handler: handleERC20PullInitialize
        - event: Redeem(address,address,uint256[2])
          handler: handleRedeem
        - event: TreasuryAsset(address,address)
          handler: handleTreasuryAsset
      file: ./src/trust/RedeemableERC20.ts
  - kind: ethereum/contract
    name: PoolTemplate
    network: {{ network }}
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LOG_SWAP
      abis:
        - name: Pool
          file: ./abis/Pool.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: RedeemableERC20
          file: ./abis/RedeemableERC20.json
        - name: SeedERC20
          file: ./abis/SeedERC20.json
      eventHandlers:
        - event: LOG_SWAP(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleLOG_SWAP
      file: ./src/trust/Pool.ts
  - kind: ethereum/contract
    name: ERC20BalanceTierTemplate
    network: {{ network }}
    source:
      abi: ERC20BalanceTier
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Initialize
        - InitializeValueTier
        - TierChange
      abis:
        - name: ERC20BalanceTier
          file: ./abis/tier/ERC20BalanceTier.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Initialize(address,address)
          handler: handleInitialize
        - event: InitializeValueTier(address,address)
          handler: handleInitializeValueTier
        - event: TierChange(address,address,uint256,uint256)
          handler: handleTierChange
      file: ./src/tier/ERC20BalanceTier.ts
  - kind: ethereum/contract
    name: ERC20TransferTierTemplate
    network: {{ network }}
    source:
      abi: ERC20TransferTier
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Initialize
        - InitializeValueTier
        - TierChange
      abis:
        - name: ERC20TransferTier
          file: ./abis/tier/ERC20TransferTier.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Initialize(address,address)
          handler: handleInitialize
        - event: InitializeValueTier(address,address)
          handler: handleInitializeValueTier
        - event: TierChange(address,address,uint256,uint256)
          handler: handleTierChange
      file: ./src/tier/ERC20TransferTier.ts
  - kind: ethereum/contract
    name: CombineTierTemplate
    network: {{ network }}
    source:
      abi: CombineTier
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TierChange
      abis:
        - name: CombineTier
          file: ./abis/tier/CombineTier.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: TierChange(address,address,uint256,uint256)
          handler: handleTierChange
      file: ./src/tier/CombineTier.ts
  - kind: ethereum/contract
    name: SaleTemplate
    network: {{ network }}
    source:
      abi: Sale
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Buy
        - Construct
        - CooldownInitialize
        - CooldownTriggered
        - End
        - Initialize
        - Refund
        - Start
      abis:
        - name: Sale
          file: ./abis/sale/Sale.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Buy(address,(address,uint256,uint256,uint256,uint256),(uint256,address,uint256,uint256,uint256))
          handler: handleBuy
        - event: Construct(address,(address))
          handler: handleConstruct
        - event: CooldownInitialize(address,uint256)
          handler: handleCooldownInitialize
        - event: CooldownTriggered(address,uint256)
          handler: handleCooldownTriggered
        - event: End(address,uint8)
          handler: handleEnd
        - event: Initialize(address,((bytes[],uint256[],uint256,uint256),(bytes[],uint256[],uint256,uint256),(bytes[],uint256[],uint256,uint256),address,address,uint256,uint256,uint256),address)
          handler: handleInitialize
        - event: Refund(address,(uint256,address,uint256,uint256,uint256))
          handler: handleRefund
        - event: Start(address)
          handler: handleStart
      file: ./src/sale/Sale.ts
  - kind: ethereum/contract
    name: VerifyTemplate
    network: {{ network }}
    source:
      abi: Verify
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Approve
      abis:
        - name: Verify
          file: ./abis/verify/Verify.json
      eventHandlers:
        - event: Approve(address,address,bytes)
          handler: handleApprove
        - event: Ban(address,address,bytes)
          handler: handleBan
        - event: Remove(address,address,bytes)
          handler: handleRemove
        - event: RequestApprove(address,bytes)
          handler: handleRequestApprove
        - event: RequestBan(address,address,bytes)
          handler: handleRequestBan
        - event: RequestRemove(address,address,bytes)
          handler: handleRequestRemove
        - event: RoleAdminChanged(indexed bytes32,indexed bytes32,indexed bytes32)
          handler: handleRoleAdminChanged
        - event: RoleGranted(indexed bytes32,indexed address,indexed address)
          handler: handleRoleGranted
        - event: RoleRevoked(indexed bytes32,indexed address,indexed address)
          handler: handleRoleRevoked
      file: ./src/verify/Verify.ts