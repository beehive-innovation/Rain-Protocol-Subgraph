specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: TrustFactory
    network: {{ network }}
    source:
      address: "{{ factory }}"
      abi: TrustFactory
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewChild
        - Implementation
      abis:
        - name: TrustFactory
          file: ./abis/TrustFactory.json
        - name: Trust
          file: ./abis/Trust.json
        - name: BPool
          file: ./abis/BPool.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: RedeemableERC20
          file: ./abis/RedeemableERC20.json
        - name: SeedERC20
          file: ./abis/SeedERC20.json
      eventHandlers:
        - event: NewChild(address,address)
          handler: handleNewChild
        - event: Implementation(address,address)
          handler: handleImplementation
      file: ./src/trustFactory.ts
templates:
  - kind: ethereum/contract
    name: TrustTemplate
    network: {{ network }}
    source:
      abi: Trust
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Construction
        - CreatorFundsRelease
        - EndDutchAuction
        - Initialize
        - Notice
        - PhaseScheduled
        - StartDutchAuction
      abis:
        - name: Trust
          file: ./abis/Trust.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Construction(address,address,address,address,address,uint256,uint256)
          handler: handleConstruction
        - event: CreatorFundsRelease(address,address,uint256)
          handler: handleCreatorFundsRelease
        - event: EndDutchAuction(address,uint256,uint256,uint256,uint256,uint256)
          handler: handleEndDutchAuction
        - event: Initialize((address,uint256,uint256,uint256,uint256,address,uint256,uint256,uint256),address,address,address,uint256)
          handler: handleInitialize
        - event: Notice(address,bytes)
          handler: handleNotice
        - event: PhaseScheduled(address,uint256,uint256)
          handler: handlePhaseScheduled
        - event: StartDutchAuction(address,address,uint256)
          handler: handleStartDutchAuction
      file: ./src/trust.ts
  - kind: ethereum/contract
    name: SeedERC20Template
    network: {{ network }}
    source:
      abi: SeedERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Seed
        - Initialize
        - Unseed
        - Transfer
      abis:
        - name: SeedERC20
          file: ./abis/SeedERC20.json
      eventHandlers:
        - event: Seed(address,uint256,uint256)
          handler: handleSeed
        - event: Initialize(address,address,address,uint256,uint256)
          handler: handleInitialize
        - event: Unseed(address,uint256,uint256)
          handler: handleUnseed
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/SeedERC20.ts
  - kind: ethereum/contract
    name: RedeemableERC20Template
    network: {{ network }}
    source:
      abi: RedeemableERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Initialize
        - Receiver
        - Sender
        - Transfer
        - ERC20PullInitialize
        - Redeem
        - TreasuryAsset
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: RedeemableERC20
          file: ./abis/RedeemableERC20.json
      eventHandlers:
        - event: Initialize(address,address,uint256)
          handler: handleInitialize
        - event: Receiver(address,address)
          handler: handleInitialize
        - event: Sender(address,address)
          handler: handleSender
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: ERC20PullInitialize(address,address,address)
          handler: handleERC20PullInitialize
        - event: Redeem(address,address,uint256[2])
          handler: handleRedeem
        - event: TreasuryAsset(address,address)
          handler: handleTreasuryAsset
      file: ./src/RedeemableERC20.ts