################## EmissionsERC20Factory

type EmissionsERC20Factory @entity {
  id: ID! #factory address
  "Address of EmissionsERC20Factory"
  address: Bytes! #factory address
  implementation: Bytes! #implementation address from Implementation event
  "EmissionsERC20 addresses deployed by factory"
  children: [EmissionsERC20!] #all the children that were deployed by this factory
}

type EmissionsERC20 @entity {
  id: ID! #Emissions contract address
  "Address of EmissionsERC20"
  address: Bytes! #Emissions contract address
  "Block number of contract deployment"
  deployBlock: BigInt! #the block the contract was deployed
  "Timestamp of contract deployment"
  deployTimestamp: BigInt! #the timestamp the contract was deployed
  "Address of deployer"
  deployer: Bytes! #address of the deployer - get from event Initialize.sender
  "Address of EmissionsERC20Factory factory "
  factory: EmissionsERC20Factory! #the factory that deployed this contract
  "Token name"
  name: String! #get from EmissionsERC20.name()
  "Token symbol"
  symbol: String! #get from EmissionsERC20.symbol()
  "Token decimals"
  decimals: Int! #get from EmissionsERC20.decimals()
  "Token totalSupply"
  totalSupply: BigInt! #get from EmissionsERC20.totalSupply() after every Transfer event from the zero address
  "Is allowDelegatedClaims"
  allowDelegatedClaims: Boolean #from Initialize.config.allowDelegatedClaims
  "StateConfig to calculate claim"
  calculateClaimStateConfig: EmissionsERC20StateConfig #from Initialize.config.vmStateConfig
  "List of EmissionsERC20Claim"
  claims: [EmissionsERC20Claim!] #get from Claim events
}

# populate on Claim event
type EmissionsERC20Claim @entity {
  "Hash of the transaction at wihich claim is made"
  id: ID! #txhash of the Claim event
  "Block number at which claim is made"
  block: BigInt! #the block of the Claim event
  "Timestamp at which claim is made"
  timestamp: BigInt! #the timestamp of the Claim event
  "Address of sender who send the claim"
  sender: Bytes! #Claim.sender
  "Address for whome claim is sent"
  claimant: Bytes! #Claim.claimant
  "Data of claim"
  data: Bytes! #Claim.data
  "Amount of claim"
  amount: BigInt #from Transfer.amount - Transfer event that was emitted in the same transaction
  "contract that emitted the Claim event"
  emissionsERC20: EmissionsERC20! #the contract that emitted the Claim event
}

################## EmissionsERC20Factory
